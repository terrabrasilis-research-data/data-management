{
    "openapi": "3.0.0",
    "info": {
      "description": "The Data Manager component is responsible for the management of Research Data Repositories and for providing mechanisms for searching and accessing all data available in the repositories.",
      "version": "1.0.0",
      "title": "Swagger TerraBrasilisRD API",
      "contact": {
        "email": "gabrielsansigolo@gmail.com"
      },
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      },
      "host":"127.0.0.1:5000"
    },
    "components": {
      "securitySchemes": {
        "basicAuth": {
          "type": "http",
          "scheme": "basic"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "user_id": {
              "type":"integer",
              "format":"int64"
            },
            "username": {
              "type": "string",
              "format": "string"
            },
            "full_name": {
              "type": "string",
              "format": "string"
            },
            "password": {
              "type": "string",
              "format": "string"
            },
            "email": {
              "type": "string",
              "format": "string"
            },
            "image": {
              "type": "string",
              "format":  "string"
            },
            "created_on": {
              "type": "string",
              "format": "DateTime"
            },
            "last_login": {
              "type": "string",
              "format": "DateTime"
            }
          }

        },
        "Repositorie": {
          "type": "object",
          "properties": {
            "repo_id": {
              "type":"integer",
              "format":"int64"
            },
            "name": {
              "type": "string",
              "format": "string"
            },
            "abstract": {
              "type": "string",
              "format": "string"
            },
            "maintainer": {
              "type": "string",
              "format": "string"
            },
            "language": {
              "type": "string",
              "format": "string"
            },
            "bbox": {
              "type": "geom",
              "format":  "Polygon"
            },
            "custom_fields": {
              "type": "string",
              "format": "JSON"
            },
            "created_on": {
              "type": "string",
              "format": "DateTime"
            }
          }
      }
    }
    },
    "servers": [
      {
        "url":"/api/v1.0/"
      }
    ],
    "tags": [
    ],
    "paths": {
      "/users": {
        "get": {
          "tags": [
            "User Request"
          ],
          "summary": "Returns userRequests",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            }
          }
        },
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "User Request"
          ],
          "summary": "Create a new user request system",
          "requestBody": {
            "description": "User Request Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad post data."
            }
          }
        }
      },
      "/users/{user_id}": {
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "user_id of the user that we want to match",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "User Request"
          ],
          "summary": "Get user request with given user_id",
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true,
              "description": "User Request user_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. User request not found."
            }
          }
        },
        "put": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "User Request"
          ],
          "summary": "Update a user request with given user_id",
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true,
              "description": "User Request user_id",
              "schema": {
              }
            }
          ],
          "requestBody": {
            "description": "User Request Update Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad put data."
            }
          }
        },
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete User Request by user_id",
          "tags": [
            "User Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true,
              "description": "User Request user_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. User Request not found."
            }
          }
        }
      },
      "/groups": {
        "get": {
          "tags": [
            "Groups Request"
          ],
          "summary": "Returns groupsRequests",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            }
          }
        },
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Groups Request"
          ],
          "summary": "Create a new Groups request system",
          "requestBody": {
            "description": "Groups Request Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad post data."
            }
          }
        }
      },
      "/groups/{group_id}": {
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "description": "group_id of the user that we want to match",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Groups Request"
          ],
          "summary": "Get Groups request with given group_id",
          "parameters": [
            {
              "in": "path",
              "name": "group_id",
              "required": true,
              "description": "Groups Request group_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Groups request not found."
            }
          }
        },
        "put": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Groups Request"
          ],
          "summary": "Update a Groups request with given group_id",
          "parameters": [
            {
              "in": "path",
              "name": "group_id",
              "required": true,
              "description": "Groups Request group_id",
              "schema": {
              }
            }
          ],
          "requestBody": {
            "description": "Groups Request Update Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad put data."
            }
          }
        },
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete Groups Request by group_id",
          "tags": [
            "Groups Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "group_id",
              "required": true,
              "description": "Groups Request group_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Groups Request not found."
            }
          }
        }
      },
      "/repositories": {
        "get": {
          "tags": [
            "Repositorie Request"
          ],
          "summary": "Returns repositoriesRequests",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            }
          }
        },
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Repositorie Request"
          ],
          "summary": "Create a new repositorie request system",
          "requestBody": {
            "description": "Repositorie Request Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad post data."
            }
          }
        }
      },
      "/repositories/{repo_id}": {
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "description": "repo_id of the user that we want to match",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Repositorie Request"
          ],
          "summary": "Get repositorie request with given repo_id",
          "parameters": [
            {
              "in": "path",
              "name": "repo_id",
              "required": true,
              "description": "Repositorie Request repo_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Repositorie request not found."
            }
          }
        },
        "put": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Repositorie Request"
          ],
          "summary": "Update a repositorie request with given repo_id",
          "parameters": [
            {
              "in": "path",
              "name": "repo_id",
              "required": true,
              "description": "Repositorie Request repo_id",
              "schema": {
              }
            }
          ],
          "requestBody": {
            "description": "Repositorie Request Update Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad put data."
            }
          }
        },
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete Repositorie Request by repo_id",
          "tags": [
            "Repositorie Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "repo_id",
              "required": true,
              "description": "Repositorie Request repo_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Repositorie Request not found."
            }
          }
        }
      },
      "/services": {
        "get": {
          "tags": [
            "Service Request"
          ],
          "summary": "Returns servicesRequests",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            }
          }
        },
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Service Request"
          ],
          "summary": "Create a new service request system",
          "requestBody": {
            "description": "Repositorie Service Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad post data."
            }
          }
        }
      },
      "/services/{service_id}": {
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "description": "service_id of the service that we want to match",
            "type": "string"
          }
        ],
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete Service Request by service_id",
          "tags": [
            "Service Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "service_id",
              "required": true,
              "description": "Service Request service_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Service Request not found."
            }
          }
        }
      },
      "/keywords": {
        "get": {
          "tags": [
            "Keyword Request"
          ],
          "summary": "Returns keywordRequests",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            }
          }
        },
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Keyword Request"
          ],
          "summary": "Create a new keyword request system",
          "requestBody": {
            "description": "Keyword Request Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad post data."
            }
          }
        }
      },
      "/categories": {
        "get": {
          "tags": [
            "Categorie Request"
          ],
          "summary": "Returns categorieRequests",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            }
          }
        },
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Categorie Request"
          ],
          "summary": "Create a new categorie request system",
          "requestBody": {
            "description": "Categorie Request Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad categorie data."
            }
          }
        }
      },
      "/hosts": {
        "get": {
          "tags": [
            "Host Request"
          ],
          "summary": "Returns hostRequests",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            }
          }
        },
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Host Request"
          ],
          "summary": "Create a new host request system",
          "requestBody": {
            "description": "Host Request Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad host data."
            }
          }
        }
      },
      "/ports/{repo_id}": {
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "description": "repo_id of the ports that we want to match",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Ports Request"
          ],
          "summary": "Get ports request with given repo_id",
          "parameters": [
            {
              "in": "path",
              "name": "repo_id",
              "required": true,
              "description": "Port Request repo_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Port request not found."
            }
          }
        }
      },
      "/service_repositorie_rel": {
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Service Repositorie Request"
          ],
          "summary": "Create a new service repositorie request system",
          "requestBody": {
            "description": "Service Repositorie Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad service repositorie data."
            }
          }
        }
      },
      "/service_repositorie_rel/{service_id}/{repo_id}": {
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "description": "Service Repositorie Request service_id",
            "type": "string"
          },
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "description": "Service Repositorie Request repo_id",
            "type": "string"
          }
        ],
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete Service Repositorie by service_id and repo_id",
          "tags": [
            "Service Repositorie Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "service_id",
              "required": true,
              "description": "Service Repositorie Request service_id",
              "schema": {
              }
            },
            {
              "in": "path",
              "name": "repo_id",
              "required": true,
              "description": "Service Repositorie Request repo_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Service Repositorie Request not found."
            }
          }
        }
      },
      "/group_repositorie_rel": {
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Group Repositorie Request"
          ],
          "summary": "Create a new group repositorie request system",
          "requestBody": {
            "description": "Repositorie Group Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad repositorie user data."
            }
          }
        }
      },
      "/group_repositorie_rel/{group_id}/{repo_id}": {
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "description": "Repositorie Group Request group_id",
            "type": "string"
          },
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "description": "Repositorie Group Request repo_id",
            "type": "string"
          }
        ],
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete Repositorie Group Request by group_id and repo_id ",
          "tags": [
            "Group Repositorie Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "group_id",
              "required": true,
              "description": "Repositorie Group Request group_id",
              "schema": {
              }
            },
            {
              "in": "path",
              "name": "repo_id",
              "required": true,
              "description": "Repositorie Group Request repo_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Repositorie Group Request not found."
            }
          }
        }
      },
      "/user_group_rel": {
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "User Group Request"
          ],
          "summary": "Create a new user Group request system",
          "requestBody": {
            "description": "Group User Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad Group user data."
            }
          }
        }
      },
      "/user_group_rel/{user_id}/{group_id}": {
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Group User Request user_id",
            "type": "string"
          },
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "description": "Group User Request group_id",
            "type": "string"
          }
        ],
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete Group User Request by user_id and group_id ",
          "tags": [
            "User Group Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true,
              "description": "Group User Request user_id",
              "schema": {
              }
            },
            {
              "in": "path",
              "name": "group_id",
              "required": true,
              "description": "Group User Request group_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Group User Request not found."
            }
          }
        }
      },
      "/categories_repositorie_rel": {
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Categorie Repositorie Request"
          ],
          "summary": "Create a new categories repositorie request system",
          "requestBody": {
            "description": "Repositorie Categorie Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad repositorie categorie data."
            }
          }
        }
      },
      "/categories_repositorie_rel/{categorie_id}/{repo_id}": {
        "parameters": [
          {
            "name": "categorie_id",
            "in": "path",
            "required": true,
            "description": "Repositorie Categorie Request categorie_id",
            "type": "string"
          },
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "description": "Repositorie Categorie Request repo_id",
            "type": "string"
          }
        ],
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete Repositorie Categorie Request by categorie_id and repo_id ",
          "tags": [
            "Categorie Repositorie Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "categorie_id",
              "required": true,
              "description": "Repositorie Categorie Request categorie_id",
              "schema": {
              }
            },
            {
              "in": "path",
              "name": "repo_id",
              "required": true,
              "description": "Repositorie Categorie Request repo_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Repositorie Categorie Request not found."
            }
          }
        }
      },
      "/keywords_repositorie_rel": {
        "post": {
          "security":{
            "basicAuth": []
          },
          "tags": [
            "Keyword Repositorie Request"
          ],
          "summary": "Create a new keyword repositorie request system",
          "requestBody": {
            "description": "Repositorie Keyword Post Object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Bad repositorie keyword data."
            }
          }
        }
      },
      "/keywords_repositorie_rel/{keyword_id}/{repo_id}": {
        "parameters": [
          {
            "name": "keyword_id",
            "in": "path",
            "required": true,
            "description": "Repositorie Keyword Request keyword_id",
            "type": "string"
          },
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "description": "Repositorie Keyword Request repo_id",
            "type": "string"
          }
        ],
        "delete": {
          "security":{
            "basicAuth": []
          },
          "summary": "Delete Repositorie Keyword Request by keyword_id and repo_id ",
          "tags": [
            "Keyword Repositorie Request"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "keyword_id",
              "required": true,
              "description": "Repositorie Keyword Request keyword_id",
              "schema": {
              }
            },
            {
              "in": "path",
              "name": "repo_id",
              "required": true,
              "description": "Repositorie Keyword Request repo_id",
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK",
              "schema": {
              }
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Repositorie Keyword Request not found."
            }
          }
        }
      }
    }
}  